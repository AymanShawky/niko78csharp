//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool.
// Code is generated on: 23/12/2009 3:08:03
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#region Entity Data Model Attributes
[assembly: global::System.Data.Objects.DataClasses.EdmSchemaAttribute()]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("TutorialEntities", "Articulo_Pallet", "Articulo", global::System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TutorialEntities.Articulo), "Pallets", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TutorialEntities.Pallet))]
#endregion

namespace TutorialEntities
{

    public partial class TutorialObjectContext : global::System.Data.Objects.ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new TutorialObjectContext object.
        /// </summary>
        public TutorialObjectContext() : 
                base(@"metadata=res://*/TutorialDataSourceModel.csdl|res://*/TutorialDataSourceModel.ssdl|res://*/TutorialDataSourceModel.msl;provider=Devart.Data.Oracle;provider connection string=""User Id=ENTITY_TUTORIAL;Password=ENTITY_TUTORIAL;Server=ALMACENVM25;Home=odac;Persist Security Info=True""", "TutorialObjectContext")
        {
            this.OnContextCreated();
        }

        /// <summary>
        /// Initializes a new TutorialObjectContext object using the connection string found in the 'TutorialObjectContext' section of the application configuration file.
        /// </summary>
        public TutorialObjectContext(string connectionString) : 
                base(connectionString, "TutorialObjectContext")
        {
            this.OnContextCreated();
        }

        /// <summary>
        /// Initialize a new TutorialObjectContext object.
        /// </summary>
        public TutorialObjectContext(global::System.Data.EntityClient.EntityConnection connection) : 
                base(connection, "TutorialObjectContext")
        {
            this.OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectQuery Properties

        public global::System.Data.Objects.ObjectQuery<Pallet> Pallets
        {
            get
            {
                if ((this._Pallets == null))
                {
                    this._Pallets = base.CreateQuery<Pallet>("Pallets");
                }
                return this._Pallets;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Pallet> _Pallets;

        public global::System.Data.Objects.ObjectQuery<Articulo> Articulos
        {
            get
            {
                if ((this._Articulos == null))
                {
                    this._Articulos = base.CreateQuery<Articulo>("Articulos");
                }
                return this._Articulos;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Articulo> _Articulos;

        public global::System.Data.Objects.ObjectQuery<Persona> Personas
        {
            get
            {
                if ((this._Personas == null))
                {
                    this._Personas = base.CreateQuery<Persona>("Personas");
                }
                return this._Personas;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Persona> _Personas;

        public global::System.Data.Objects.ObjectQuery<Vehiculo> Vehiculos
        {
            get
            {
                if ((this._Vehiculos == null))
                {
                    this._Vehiculos = base.CreateQuery<Vehiculo>("Vehiculos");
                }
                return this._Vehiculos;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Vehiculo> _Vehiculos;
        #endregion

        #region AddTo Methods

        public void AddToPallets(Pallet pallet)
        {
            base.AddObject("Pallets", pallet);
        }

        public void AddToArticulos(Articulo articulo)
        {
            base.AddObject("Articulos", articulo);
        }

        public void AddToPersonas(Persona persona)
        {
            base.AddObject("Personas", persona);
        }

        public void AddToVehiculos(Vehiculo vehiculo)
        {
            base.AddObject("Vehiculos", vehiculo);
        }

        #endregion

        #region Methods

        /// <summary>
        /// There are no comments for TutorialEntities.AgregarArticulo in the schema.
        /// </summary>
        public void AgregarArticulo (string PID, string PDESCRIPCION, global::System.Nullable<decimal> PCANT_PALLET_COMPLETO)
        {
            if (this.Connection.State != System.Data.ConnectionState.Open)
              this.Connection.Open();
            System.Data.EntityClient.EntityCommand command = new System.Data.EntityClient.EntityCommand();
            command.CommandType = System.Data.CommandType.StoredProcedure;
            command.CommandText = @"TutorialObjectContext.AgregarArticulo";
            command.Connection = (System.Data.EntityClient.EntityConnection)this.Connection;
            global::System.Data.EntityClient.EntityParameter PIDParameter = new global::System.Data.EntityClient.EntityParameter("PID", System.Data.DbType.String);
            if (PID != null)
                PIDParameter.Value = PID;
            command.Parameters.Add(PIDParameter);
            global::System.Data.EntityClient.EntityParameter PDESCRIPCIONParameter = new global::System.Data.EntityClient.EntityParameter("PDESCRIPCION", System.Data.DbType.String);
            if (PDESCRIPCION != null)
                PDESCRIPCIONParameter.Value = PDESCRIPCION;
            command.Parameters.Add(PDESCRIPCIONParameter);
            global::System.Data.EntityClient.EntityParameter PCANT_PALLET_COMPLETOParameter = new global::System.Data.EntityClient.EntityParameter("PCANT_PALLET_COMPLETO", System.Data.DbType.Decimal);
            if (PCANT_PALLET_COMPLETO.HasValue)
                PCANT_PALLET_COMPLETOParameter.Value = PCANT_PALLET_COMPLETO;
            command.Parameters.Add(PCANT_PALLET_COMPLETOParameter);
            command.ExecuteNonQuery();
        }

        #endregion
    }
}
